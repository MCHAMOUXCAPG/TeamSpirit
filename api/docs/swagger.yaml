basePath: /
definitions:
  dto.Access:
    properties:
      code:
        type: string
      user:
        type: string
    type: object
  dto.AuthResponse:
    properties:
      token:
        type: string
    type: object
  dto.Error:
    properties:
      function:
        type: string
      message:
        type: string
      path:
        type: string
      status:
        type: integer
    type: object
  dto.HistoricResult:
    properties:
      endDate:
        type: string
      startDate:
        type: string
      totalAverage:
        type: number
    type: object
  dto.JwtCustomClaims:
    properties:
      Email:
        type: string
      Password:
        type: string
    type: object
  dto.Period:
    properties:
      endDate:
        type: string
      startDate:
        type: string
    type: object
  dto.RegisterDTO:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
    type: object
  dto.Result:
    properties:
      completed:
        type: string
      currentResult:
        type: number
      historicResult:
        type: number
      period:
        $ref: '#/definitions/dto.Period'
        type: object
    type: object
  dto.ResultByQuestions:
    properties:
      average:
        type: number
      notes:
        items:
          $ref: '#/definitions/entities.Note'
        type: array
      questionNumber:
        type: integer
    type: object
  dto.ResultByUsers:
    properties:
      average:
        type: number
      notes:
        items:
          $ref: '#/definitions/entities.Note'
        type: array
      user:
        type: string
    type: object
  entities.Note:
    properties:
      Number:
        type: integer
      SurveyCode:
        type: string
      User:
        type: string
      note:
        type: number
    type: object
  entities.Role:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  entities.Survey:
    properties:
      TeamName:
        type: string
      code:
        type: string
      endDate:
        type: string
      median:
        type: number
      notes:
        items:
          $ref: '#/definitions/entities.Note'
        type: array
      startDate:
        type: string
    type: object
  entities.Team:
    properties:
      frequency:
        type: integer
      name:
        type: string
      num_mumbers:
        type: integer
      startDate:
        type: string
      surveys:
        items:
          $ref: '#/definitions/entities.Survey'
        type: array
      users:
        items:
          $ref: '#/definitions/entities.User'
        type: array
    type: object
  entities.User:
    properties:
      RoleID:
        type: integer
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      password:
        type: string
      role:
        $ref: '#/definitions/entities.Role'
        type: object
      teams:
        items:
          $ref: '#/definitions/entities.Team'
        type: array
    type: object
host: petstore.swagger.io
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Petstore server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /NewSurveyCode/:teamName:
    get:
      consumes:
      - application/json
      description: returns surveysCode
      parameters:
      - description: team name
        in: query
        name: teamName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Team'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: NextSurveyCode
      tags:
      - Surveys
  /access:
    post:
      consumes:
      - application/json
      description: you should send a survey code to access
      parameters:
      - description: accessDTO
        in: body
        name: accessDTO
        required: true
        schema:
          $ref: '#/definitions/dto.Access'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Survey'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.Error'
        "406":
          description: Not Acceptable
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Access to survey
      tags:
      - Authentication
  /login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: JwtCustomClaims
        in: body
        name: JwtCustomClaims
        required: true
        schema:
          $ref: '#/definitions/dto.JwtCustomClaims'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AuthResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Login
      tags:
      - Authentication
  /me:
    get:
      consumes:
      - application/json
      description: Current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Current User
      tags:
      - Authentication
  /register:
    post:
      consumes:
      - application/json
      description: Register
      parameters:
      - description: RegisterDTO
        in: body
        name: RegisterDTO
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Register
      tags:
      - Authentication
  /resultByQuestions/:teamName:
    get:
      consumes:
      - application/json
      description: returns the result survey grouped by users
      parameters:
      - description: Team name
        in: path
        name: teamName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ResultByQuestions'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Survey resultByQuestions
      tags:
      - Surveys
  /resultBySurveys/:teamName:
    get:
      consumes:
      - application/json
      description: returns the result survey grouped by Period of startDate and EndDate
      parameters:
      - description: Team name
        in: path
        name: teamName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.HistoricResult'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Survey resultByPeriod
      tags:
      - Surveys
  /resultByUsers/:teamName:
    get:
      consumes:
      - application/json
      description: returns the result survey grouped by users
      parameters:
      - description: Team name
        in: path
        name: teamName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ResultByUsers'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Survey resultByUsers
      tags:
      - Surveys
  /role/:id:
    delete:
      consumes:
      - application/json
      description: returns a empty role
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Role'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Delete a role
      tags:
      - Roles
    get:
      consumes:
      - application/json
      description: returns one role by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Role'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Get one role
      tags:
      - Roles
    put:
      consumes:
      - application/json
      description: returns the role updated
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: RoleDTO
        in: body
        name: RoleDTO
        required: true
        schema:
          $ref: '#/definitions/entities.Role'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Role'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Update a new role
      tags:
      - Roles
  /role/create:
    post:
      consumes:
      - application/json
      description: returns the role created
      parameters:
      - description: RoleDTO
        in: body
        name: RoleDTO
        required: true
        schema:
          $ref: '#/definitions/entities.Role'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Role'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Create a new role
      tags:
      - Roles
  /roles:
    get:
      consumes:
      - application/json
      description: returns all roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Role'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Get all roles
      tags:
      - Roles
  /survey/:surveyCode:
    delete:
      consumes:
      - application/json
      description: returns a empty survey
      parameters:
      - description: survey Code
        in: path
        name: surveyCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Survey'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Delete a survey
      tags:
      - Surveys
    get:
      consumes:
      - application/json
      description: returns survey by it code
      parameters:
      - description: survey Code
        in: path
        name: surveyCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Survey'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Get survey by it code
      tags:
      - Surveys
    put:
      consumes:
      - application/json
      description: returns the survey updated
      parameters:
      - description: survey Code
        in: path
        name: surveyCode
        required: true
        type: string
      - description: SurveyDTO
        in: body
        name: SurveyDTO
        required: true
        schema:
          $ref: '#/definitions/entities.Survey'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Survey'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Update a survey
      tags:
      - Surveys
  /survey/:surveyCode/addNotes:
    post:
      consumes:
      - application/json
      description: you should send an array of Notes. Those will be saved in the survey with code provided.
      parameters:
      - description: survey Code
        in: path
        name: surveyCode
        required: true
        type: string
      - description: '[]Notes'
        in: body
        name: '[]Notes'
        required: true
        schema:
          items:
            $ref: '#/definitions/entities.Note'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Survey'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Add notes to survey
      tags:
      - Surveys
  /survey/create:
    post:
      consumes:
      - application/json
      description: returns the survey created
      parameters:
      - description: SurveyDTO
        in: body
        name: SurveyDTO
        required: true
        schema:
          $ref: '#/definitions/entities.Survey'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Survey'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Create a new survey
      tags:
      - Surveys
  /survey/exportCsv:
    get:
      description: returns surveys export on csv stream
      parameters:
      - description: start date
        in: query
        name: startDate
        required: true
        type: string
      - description: end date
        in: query
        name: endDate
        required: true
        type: string
      - description: team name
        in: query
        name: teamName
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Surveys export
      tags:
      - Surveys
  /survey/new/:teamName:
    get:
      consumes:
      - application/json
      description: returns survey by it code
      parameters:
      - description: team name
        in: path
        name: teamName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Survey'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Get new survey by teamName
      tags:
      - Surveys
  /survey/resetSurvey/:surveyCode:
    put:
      consumes:
      - application/json
      description: returns a empty survey
      parameters:
      - description: survey Code
        in: path
        name: surveyCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Survey'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Reset a survey
      tags:
      - Surveys
  /survey/result/:teamName:
    get:
      consumes:
      - application/json
      description: returns the result survey
      parameters:
      - description: Team name
        in: path
        name: teamName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Result'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Survey result
      tags:
      - Surveys
  /survies:
    get:
      consumes:
      - application/json
      description: returns all surveys
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Survey'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Get all surveys
      tags:
      - Surveys
  /team/:teamName:
    delete:
      consumes:
      - application/json
      description: returns a team updated
      parameters:
      - description: Team name
        in: path
        name: teamName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Team'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Update a team
      tags:
      - Teams
    get:
      consumes:
      - application/json
      description: returns one team by teamName
      parameters:
      - description: Team name
        in: path
        name: teamName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Team'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Get one team
      tags:
      - Teams
    put:
      consumes:
      - application/json
      description: returns a team updated
      parameters:
      - description: Team name
        in: path
        name: teamName
        required: true
        type: string
      - description: TeamDTO
        in: body
        name: TeamDTO
        required: true
        schema:
          $ref: '#/definitions/entities.Team'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Team'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Update a team
      tags:
      - Teams
  /team/create:
    post:
      consumes:
      - application/json
      description: returns a team created
      parameters:
      - description: TeamDTO
        in: body
        name: TeamDTO
        required: true
        schema:
          $ref: '#/definitions/entities.Team'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Team'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Create a new team
      tags:
      - Teams
  /teams:
    get:
      consumes:
      - application/json
      description: returns all teams
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Team'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Get all teams
      tags:
      - Teams
  /user/:id:
    delete:
      consumes:
      - application/json
      description: returns a empty user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Delete a user
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: returns one
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Get one users
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: returns the user updated
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UserDTO
        in: body
        name: UserDTO
        required: true
        schema:
          $ref: '#/definitions/entities.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Update a new user
      tags:
      - Users
  /user/create:
    post:
      consumes:
      - application/json
      description: returns the user created
      parameters:
      - description: UserDTO
        in: body
        name: UserDTO
        required: true
        schema:
          $ref: '#/definitions/entities.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.Error'
        "406":
          description: Not Acceptable
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Create a new user
      tags:
      - Users
  /users:
    get:
      consumes:
      - application/json
      description: returns all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Get all users
      tags:
      - Users
swagger: "2.0"
